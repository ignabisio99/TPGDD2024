USE [GD1C2024]
GO

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'QUICK_SORT')
	EXEC('CREATE SCHEMA QUICK_SORT')
GO

IF NOT EXISTS(SELECT name FROM sys.procedures WHERE name = 'DROP_TABLES')
	EXEC('CREATE PROCEDURE [QUICK_SORT].[DROP_TABLES] AS BEGIN SET NOCOUNT ON; END');
GO

ALTER PROCEDURE [QUICK_SORT].[DROP_TABLES]
AS
BEGIN
	DECLARE @sql NVARCHAR(500) = ''
	
	DECLARE cursorTablas CURSOR FOR
	SELECT DISTINCT 'ALTER TABLE [' + tc.TABLE_SCHEMA + '].[' +  tc.TABLE_NAME + '] DROP [' + rc.CONSTRAINT_NAME + '];'
	FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc
	LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc
	ON tc.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
	WHERE tc.TABLE_SCHEMA = 'QUICK_SORT'

	OPEN cursorTablas
	FETCH NEXT FROM cursorTablas INTO @sql

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		EXEC sp_executesql @sql
		FETCH NEXT FROM cursorTablas INTO @Sql
	END

	CLOSE cursorTablas
	DEALLOCATE cursorTablas
	
	EXEC sp_MSforeachtable 'DROP TABLE ?', @whereand='AND schema_name(schema_id) = ''QUICK_SORT'' AND o.name NOT LIKE ''BI_%'''
END
GO

EXEC [QUICK_SORT].[DROP_TABLES]
GO

IF NOT EXISTS(SELECT name FROM sys.procedures WHERE name='CREATE_TABLES')
   EXEC('CREATE PROCEDURE [QUICK_SORT].[CREATE_TABLES] AS BEGIN SET NOCOUNT ON; END');
GO

ALTER PROCEDURE [QUICK_SORT].[CREATE_TABLES]
AS
BEGIN
		CREATE TABLE [QUICK_SORT].PRODUCTO_CATEGORIA(
			PRODUCTO_CATEGORIA_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			PRODUCTO_CATEGORIA NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].PRODUCTO_SUB_CATEGORIA(
			PRODUCTO_SUB_CATEGORIA_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			PRODUCTO_CATEGORIA_ID INTEGER REFERENCES[QUICK_SORT].[PRODUCTO_CATEGORIA],
			PRODUCTO_SUB_CATEGORIA NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[PRODUCTO](
			PRODUCTO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			PRODUCTO_SUB_CATEGORIA_ID INTEGER REFERENCES[QUICK_SORT].[PRODUCTO_SUB_CATEGORIA],
			PRODUCTO_NOMBRE NVARCHAR(255),
			PRODUCTO_DESCRIPCION NVARCHAR(255),
			PRODUCTO_PRECIO DECIMAL(18,2),
			PRODUCTO_MARCA NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].PROMOCION(
			PROMO_CODIGO DECIMAL(18,0)  PRIMARY KEY,
			-- PROMO_CODIGO INTEGER IDENTITY(1,1) PRIMARY KEY,
        	PROMO_DESCRIPCION NVARCHAR(255),
        	PROMO_FECHA_INICIO DATETIME,
        	PROMO_FECHA_FIN DATETIME

		);

		CREATE TABLE [QUICK_SORT].REGLA_PROMOCION_PRODUCTO(
			PROMO_CODIGO DECIMAL(18,0) REFERENCES [QUICK_SORT].[PROMOCION],
       		-- PROMO_CODIGO INTEGER REFERENCES [QUICK_SORT].[PROMOCION],
        	PRODUCTO_ID INTEGER REFERENCES [QUICK_SORT].[PRODUCTO],
        	PRIMARY KEY (PROMO_CODIGO, PRODUCTO_ID)
		);


		CREATE TABLE [QUICK_SORT].REGLA_PROMOCION(
			REGLA_PROMOCION_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			REGLA_PROMO_CODIGO DECIMAL(18,0) REFERENCES [QUICK_SORT].[PROMOCION],
--			REGLA_PROMO_CODIGO INTEGER REFERENCES [QUICK_SORT].[PROMOCION],
			REGLA_DESCRIPCION NVARCHAR(255),
			REGLA_DESCUENTO_APLICABLE DECIMAL(18,2),
			REGLA_CANTIDAD_APLICABLE DECIMAL(18,0),
			REGLA_CANTIDAD_APLICABLE_DESCUENTO DECIMAL(18,0),
			REGLA_CANTIDAD_MAXIMA DECIMAL(18,0),
			REGLA_APLICA_MISMA_MARCA DECIMAL (18,0),
			REGLA_APLICA_MISMO_PRODUCTO DECIMAL (18,0)
		);

		CREATE TABLE [QUICK_SORT].DETALLE_POR_PROMOCION(
		--TODO  
		--	DETALLE_TICKET_ID INTEGER REFERENCES [QUICK_SORT].[DETALE_TICKET],
			PROMO_CODIGO DECIMAL(18,0) REFERENCES [QUICK_SORT].[PROMOCION],
			DETALLE_TICKET_ID INTEGER IDENTITY(1,1),
			PROMO_TOTAL DECIMAL(18,2),
			PRIMARY KEY (DETALLE_TICKET_ID,PROMO_CODIGO)
		);

END
GO
-- Ejecutar procedimiento para crear tablas
EXEC [QUICK_SORT].[CREATE_TABLES]
GO

-- CREATE PROCEDURE [QUICK_SORT].[MIGRAR]
-- AS
-- BEGIN

-- INSERT INTO [QUICK_SORT].[PRODUCTO] (PRODUCTO)
-- 	SELECT DISTINCT PRODUCTO_NOMBRE
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PRODUCTO_NOMBRE IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT PRODUCTO_DESCRIPCION
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PRODUCTO_DESCRIPCION IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT PRODUCTO_PRECIO
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PRODUCTO_PRECIO IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT PRODUCTO_MARCA
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PRODUCTO_MARCA IS NOT NULL

-- INSERT INTO [QUICK_SORT].[PRODUCTO_SUB_CATEGORIA] (PRODUCTO_SUB_CATEGORIA)
-- 	SELECT DISTINCT PRODUCTO_SUB_CATEGORIA
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PRODUCTO_SUB_CATEGORIA IS NOT NULL

-- INSERT INTO [QUICK_SORT].[PRODUCTO_CATEGORIA] (PRODUCTO_CATEGORIA)
-- 	SELECT DISTINCT PRODUCTO_CATEGORIA
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PRODUCTO_CATEGORIA IS NOT NULL
	
-- INSERT INTO [QUICK_SORT].[REGLA_PROMOCION_PRODUCTO] (REGLA_PROMOCION_PRODUCTO)
-- 	SELECT DISTINCT PROMO_CODIGO
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PROMO_CODIGO IS NOT NULL

-- INSERT INTO [QUICK_SORT].[PROMOCION] (PROMOCION)
-- 	SELECT DISTINCT PROMOCION_DESCRIPCION
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PROMOCION_DESCRIPCION IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT PROMOCION_FECHA_INICIO
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PROMOCION_FECHA_INICIO IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT PROMOCION_FECHA_FIN
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PROMOCION_FECHA_FIN IS NOT NULL

-- INSERT INTO [QUICK_SORT].[REGLA_PROMOCION] (REGLA_PROMOCION)
-- 	SELECT DISTINCT REGLA_DESCRIPCION
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE REGLA_DESCRIPCION IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT REGLA_DESCUENTO_APLICABLE_PROD
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE REGLA_DESCUENTO_APLICABLE_PROD IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT REGLA_CANT_APLICABLE_REGLA
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE REGLA_CANT_APLICABLE_REGLA IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT REGLA_CANT_APLICABLE_DESCUENTO
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE REGLA_CANT_APLICABLE_DESCUENTO IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT REGLA_CANT_MAX_PROD
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE REGLA_CANT_MAX_PROD IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT REGLA_APLICA_MISMA_MARCA
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE REGLA_APLICA_MISMA_MARCA IS NOT NULL
-- 	UNION
-- 	SELECT DISTINCT REGLA_APLICA_MISMO_PROD
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE REGLA_APLICA_MISMO_PROD IS NOT NULL
	
-- INSERT INTO [QUICK_SORT].[DETALLE_POR_PROMOCION] (DETALLE_POR_PROMOCION)
-- 	SELECT DISTINCT PROMO_CODIGO
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PROMO_CODIGO IS NOT NULL
-- 	SELECT DISTINCT PROMO_APLICADA_DESCUENTO --PROMO_TOTAL
-- 	FROM [gd_esquema].[Maestra]
-- 	WHERE PROMO_APLICADA_DESCUENTO IS NOT NULL


-- END
-- GO

-- EXEC [QUICK_SORT].[MIGRAR]

GO

