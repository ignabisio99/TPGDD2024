USE [GD1C2024]
GO

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'QUICK_SORT')
    EXEC('CREATE SCHEMA QUICK_SORT')
GO

IF NOT EXISTS(SELECT name FROM sys.procedures WHERE name = 'DROP_TABLES')
    EXEC('CREATE PROCEDURE [QUICK_SORT].[DROP_TABLES] AS BEGIN SET NOCOUNT ON; END');
GO

ALTER PROCEDURE [QUICK_SORT].[DROP_TABLES]
AS
BEGIN
    DECLARE @sql NVARCHAR(500) = ''
    
    DECLARE cursorTablas CURSOR FOR
    SELECT DISTINCT 'ALTER TABLE [' + tc.TABLE_SCHEMA + '].[' +  tc.TABLE_NAME + '] DROP [' + rc.CONSTRAINT_NAME + '];'
    FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc
    LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc
    ON tc.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
    WHERE tc.TABLE_SCHEMA = 'QUICK_SORT'

    OPEN cursorTablas
    FETCH NEXT FROM cursorTablas INTO @sql

    WHILE (@@FETCH_STATUS = 0)
    BEGIN
        EXEC sp_executesql @sql
        FETCH NEXT FROM cursorTablas INTO @Sql
    END

    CLOSE cursorTablas
    DEALLOCATE cursorTablas
    
    EXEC sp_MSforeachtable 'DROP TABLE ?', @whereand='AND schema_name(schema_id) = ''QUICK_SORT'' AND o.name NOT LIKE ''BI_%'''
END
GO

EXEC [QUICK_SORT].[DROP_TABLES]
GO

IF NOT EXISTS(SELECT name FROM sys.procedures WHERE name='CREATE_TABLES')
   EXEC('CREATE PROCEDURE [QUICK_SORT].[CREATE_TABLES] AS BEGIN SET NOCOUNT ON; END');
GO

ALTER PROCEDURE [QUICK_SORT].[CREATE_TABLES]
AS
BEGIN

    CREATE TABLE [QUICK_SORT].[PROVINCIA](
        PROVINCIA_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
        PROVINCIA NVARCHAR(255)
    );

    CREATE TABLE [QUICK_SORT].[LOCALIDAD](
        LOCALIDAD_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
        PROVINCIA_ID INTEGER REFERENCES [QUICK_SORT].[PROVINCIA],
        LOCALIDAD NVARCHAR(255)
    );
    
    CREATE TABLE [QUICK_SORT].[PAGO] (
        PAGO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
        PAGO_TICKET_ID INTEGER NOT NULL,
        PAGO_MEDIO_PAGO_ID INTEGER NOT NULL,
        DETALLE_PAGO_ID INTEGER NOT NULL,
        PAGO_FECHA DATETIME NOT NULL,
        PAGO_IMPORTE DECIMAL(18,2) NOT NULL,
        PAGO_DESCUENTO_APLICADO DECIMAL(18,2),
        FOREIGN KEY (PAGO_TICKET_ID) REFERENCES [QUICK_SORT].[TICKET](TICKET_ID),
        FOREIGN KEY (PAGO_MEDIO_PAGO_ID) REFERENCES [QUICK_SORT].[PAGO_MEDIO_PAGO](PAGO_MEDIO_PAGO_ID),
        FOREIGN KEY (DETALLE_PAGO_ID) REFERENCES [QUICK_SORT].[DETALLE_PAGO](DETALLE_PAGO_ID)
    );

    CREATE TABLE [QUICK_SORT].[CLIENTE] (
        CLIENTE_ID INTEGER IDENTITY (1,1) PRIMARY KEY, --para los id que no estan en la maestra
        CLIENTE_DIRECCION_ID INTEGER NOT NULL,
        CLIENTE_DNI DECIMAL(18,0) NOT NULL,
        CLIENTE_NOMBRE NVARCHAR(255) NOT NULL,
        CLIENTE_APELLIDO NVARCHAR(255) NOT NULL,
        CLIENTE_FECHA_REGISTRO DATETIME NOT NULL,
        CLIENTE_TELEFONO DECIMAL(18,0),
        CLIENTE_MAIL NVARCHAR(255),
        CLIENTE_FECHA_NACIMIENTO DATE,
        FOREIGN KEY (CLIENTE_DIRECCION_ID) REFERENCES [QUICK_SORT].[DIRECCION](DIRECCION_ID)
    );

    CREATE TABLE [QUICK_SORT].[ENVIO] (
        ENVIO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
        ENVIO_TICKET_ID INTEGER NOT NULL,
        ENVIO_CLIENTE_ID INTEGER NOT NULL,
        ENVIO_FECHA_PROGRAMADA DATETIME,
        ENVIO_HORA_INICIO DECIMAL(18,0),
        ENVIO_HORA_FIN DECIMAL(18,0),
        ENVIO_FECHA_ENTREGA DATETIME,
        ENVIO_COSTO DECIMAL(18,2),
        FOREIGN KEY (ENVIO_TICKET_NRO) REFERENCES [QUICK_SORT].[TICKET](TICKET_ID),
        FOREIGN KEY (ENVIO_CLIENTE_ID) REFERENCES [QUICK_SORT].[CLIENTE](CLIENTE_ID),
    );

    CREATE TABLE [QUICK_SORT].[DETALLE_PAGO] (
        DETALLE_PAGO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
        DET_PAGO_CLIENTE_ID INTEGER NOT NULL,
        DET_PAGO_NRO_TARJETA NVARCHAR(50) NOT NULL,
        DET_PAGO_FECHA_VEN_TARJETA DATETIME NOT NULL,
        DET_PAGO_CUOTAS DECIMAL(18,0) NOT NULL,
        FOREIGN KEY (DET_PAGO_CLIENTE_ID) REFERENCES [QUICK_SORT].[CLIENTE](CLIENTE_ID)
    );

    CREATE TABLE [QUICK_SORT].[PAGO_MEDIO_PAGO] (
        PAGO_MEDIO_PAGO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
        MEDIO_PAGO_TIPO_ID INTEGER NOT NULL,
        PAGO_MEDIO_PAGO NVARCHAR(255) NOT NULL,
        FOREIGN KEY (MEDIO_PAGO_TIPO_ID) REFERENCES [QUICK_SORT].[MEDIO_PAGO_TIPO](MEDIO_PAGO_TIPO_ID)
    );

    CREATE TABLE [QUICK_SORT].[MEDIO_PAGO_TIPO] (
        MEDIO_PAGO_TIPO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
        MEDIO_PAGO_TIPO NVARCHAR(255) NOT NULL
    );

END
GO

EXEC [QUICK_SORT].[CREATE_TABLES]
GO

CREATE PROCEDURE [QUICK_SORT].[MIGRAR]
AS
BEGIN
    --provincia

    INSERT INTO [QUICK_SORT].[provincia] (PROVINCIA)
        SELECT DISTINCT SUCURSAL_PROVINCIA
        FROM [gd_esquema].[Maestra]
        WHERE SUCURSAL_PROVINCIA IS NOT NULL
        UNION
        SELECT DISTINCT SUPER_PROVINCIA
        FROM [gd_esquema].[Maestra]
        WHERE SUPER_PROVINCIA IS NOT NULL
		WHERE SUPER_PROVINCIA IS NOT NULL	
		UNION
		SELECT DISTINCT CLIENTE_PROVINCIA
		FROM [gd_esquema].Maestra
		WHERE CLIENTE_PROVINCIA IS NOT NULL
    
    --CLIENTE, Como el id no esta en la maestra no lo agrego aca 
	INSERT INTO [QUICK_SORT].[CLIENTE] (CLIENTE_DIRECCION_ID,CLIENTE_DNI,CLIENTE_NOMBRE,CLIENTE_APELLIDO
		CLIENTE_FECHA_REGISTRO,CLIENTE_TELEFONO,CLIENTE_MAIL,CLIENTE_FECHA_NACIMIENTO)
		SELECT DISTINCT DIRECCION_ID,CLIENTE_DNI,CLIENTE_NOMBRE,CLIENTE_APELLIDO
		CLIENTE_FECHA_REGISTRO,CLIENTE_TELEFONO,CLIENTE_MAIL,CLIENTE_FECHA_NACIMIENTO
		FROM [gd_esquema].[Maestra]
        JOIN [QUICK_SORT].[DIRECCION] ON CLIENTE_DOMICILIO = DIRECCION
		WHERE CLIENTE_DNI IS NOT NULL

    --envio
    INSERT INTO [QUICK_SORT].[ENVIO] (ENVIO_TICKET_ID,ENVIO_CLIENTE_ID,ENVIO_FECHA_PROGRAMADA,ENVIO_HORA_INICIO
        ENVIO_HORA_FIN,ENVIO_FECHA_ENTREGA,ENVIO_COSTO)
        SELECT DISTINCT t.TICKET_ID,c.CLIENTE_ID,m.ENVIO_FECHA_PROGRAMADA,m.ENVIO_HORA_INICIO
        m.ENVIO_HORA_FIN,m.ENVIO_FECHA_ENTREGA,m.ENVIO_COSTO
        FROM [gd_esquema].[Maestra] m
        JOIN [QUICK_SORT].[TICKET] t ON m.TICKET_NUMERO = t.TICKET_NRO AND m.TICKET_FECHA_HORA=t.TICKET_FECHA_HORA AND m.TICKET_SUBTOTAL_PRODUCTOS=t.TICKET_SUBTOTAL_PRODUCTOS
        JOIN [QUICK_SORT].[CLIENTE] c ON m.CLIENTE_DNI=c.CLIENTE_DNI	
        WHERE ENVIO_FECHA_PROGRAMADA IS NOT NULL

    --detallePago
    INSERT INTO [QUICK_SORT].[DETALLE_PAGO] (DET_PAGO_CLIENTE_ID,DET_PAGO_NRO_TARJETA,DET_PAGO_FECHA_VEN_TARJETA,DET_PAGO_CUOTAS)
        SELECT DISTINCT DET_PAGO_CLIENTE_ID,PAGO_TARJETA_NRO,PAGO_TARJETA_FECHA_VENC,PAGO_TARJETA_CUOTAS
        FROM [gd_esquema].[Maestra] m 
        JOIN [QUICK_SORT].[CLIENTE] c ON m.CLIENTE_DNI=c.CLIENTE_DNI
        WHERE PAGO_TARJETA_NRO IS NOT NULL
    
    --medioPagoTipo
    INSERT INTO [QUICK_SORT].[MEDIO_PAGO_TIPO] (MEDIO_PAGO_TIPO)
        SELECT DISTINCT PAGO_TIPO_MEDIO_PAGO
        FROM [gd_esquema].[Maestra] 
        WHERE PAGO_TIPO_MEDIO_PAGO IS NOT NULL

    --pagoMedioPago
    INSERT INTO [QUICK_SORT].[PAGO_MEDIO_PAGO] (MEDIO_PAGO_TIPO_ID,PAGO_MEDIO_PAGO)
        SELECT DISTINCT t.MEDIO_PAGO_TIPO_ID,PAGO_MEDIO_PAGO
        FROM [gd_esquema].[Maestra] m
        JOIN [QUICK_SORT].[MEDIO_PAGO_TIPO] t ON m.PAGO_TIPO_MEDIO_PAGO=t.MEDIO_PAGO_TIPO
        WHERE PAGO_MEDIO_PAGO IS NOT NULL

    --pago
    INSERT INTO [QUICK_SORT].[PAGO] (PAGO_TICKET_ID,PAGO_MEDIO_PAGO_ID,DETALLE_PAGO_ID,PAGO_FECHA,PAGO_IMPORTE,PAGO_DESCUENTO_APLICADO)
        SELECT DISTINCT t.TICKET_ID,p.PAGO_MEDIO_PAGO_ID,d.DETALLE_PAGO_ID,PAGO_FECHA,PAGO_IMPORTE,PAGO_DESCUENTO_APLICADO 
        FROM [gd_esquema].[Maestra] m 
        JOIN [QUICK_SORT].[PAGO_MEDIO_PAGO] p ON m.PAGO_MEDIO_PAGO=p.PAGO_MEDIO_PAGO
        JOIN [QUICK_SORT].[TICKET] t ON m.TICKET_NUMERO = t.TICKET_NRO AND m.TICKET_FECHA_HORA=t.TICKET_FECHA_HORA AND m.TICKET_SUBTOTAL_PRODUCTOS=t.TICKET_SUBTOTAL_PRODUCTOS 
        JOIN [QUICK_SORT].[DETALLE_PAGO] d ON m.PAGO_TARJETA_CUOTAS=d.DET_PAGO_CUOTAS AND m.PAGO_TARJETA_FECHA_VENC=d.DET_PAGO_FECHA_VEN_TARJETA AND m.PAGO_TARJETA_NRO=d.DET_PAGO_NRO_TARJETA 
        JOIN [QUICK_SORT].[CLIENTE] c ON d.DET_PAGO_CLIENTE_ID=c.CLIENTE_ID AND m.CLIENTE_DNI=c.CLIENTE_DNI
        WHERE PAGO_FECHA IS NOT NULL

END
GO

EXEC [QUICK_SORT].[MIGRAR]
GO
