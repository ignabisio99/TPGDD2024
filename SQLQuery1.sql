USE [GD1C2024]
GO

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'QUICK_SORT')
	EXEC('CREATE SCHEMA QUICK_SORT')
GO

IF NOT EXISTS(SELECT name FROM sys.procedures WHERE name = 'DROP_TABLES')
	EXEC('CREATE PROCEDURE [QUICK_SORT].[DROP_TABLES] AS BEGIN SET NOCOUNT ON; END');
GO

ALTER PROCEDURE [QUICK_SORT].[DROP_TABLES]
AS
BEGIN
	DECLARE @sql NVARCHAR(500) = ''
	
	DECLARE cursorTablas CURSOR FOR
	SELECT DISTINCT 'ALTER TABLE [' + tc.TABLE_SCHEMA + '].[' +  tc.TABLE_NAME + '] DROP [' + rc.CONSTRAINT_NAME + '];'
	FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc
	LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc
	ON tc.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
	WHERE tc.TABLE_SCHEMA = 'QUICK_SORT'

	OPEN cursorTablas
	FETCH NEXT FROM cursorTablas INTO @sql

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		EXEC sp_executesql @sql
		FETCH NEXT FROM cursorTablas INTO @Sql
	END

	CLOSE cursorTablas
	DEALLOCATE cursorTablas
	
	EXEC sp_MSforeachtable 'DROP TABLE ?', @whereand='AND schema_name(schema_id) = ''QUICK_SORT'' AND o.name NOT LIKE ''BI_%'''
END
GO

EXEC [QUICK_SORT].[DROP_TABLES]
GO

IF NOT EXISTS(SELECT name FROM sys.procedures WHERE name='CREATE_TABLES')
   EXEC('CREATE PROCEDURE [QUICK_SORT].[CREATE_TABLES] AS BEGIN SET NOCOUNT ON; END');
GO

ALTER PROCEDURE [QUICK_SORT].[CREATE_TABLES]
AS
BEGIN
		CREATE TABLE [QUICK_SORT].PRODUCTO_CATEGORIA(
			PRODUCTO_CATEGORIA_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			PRODUCTO_CATEGORIA NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[LOCALIDAD](
			LOCALIDAD_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			PROVINCIA_ID INTEGER REFERENCES [QUICK_SORT].[PROVINCIA] NOT NULL,
			LOCALIDAD NVARCHAR(255)
		);
		
		CREATE TABLE [QUICK_SORT].[DIRECCION](
			DIRECCION_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			LOCALIDAD_ID INTEGER REFERENCES [QUICK_SORT].[LOCALIDAD] NOT NULL,
			DIRECCION NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[DESCUENTO_MEDIO_PAGO](
			DESCUENTO_MEDIO_PAGO_CODIGO DECIMAL(18,0) PRIMARY KEY,
			--DESCUENTO_PAGO_MEDIO_PAGO_ID INTEGER REFERENCES [QUICK_SORT].[PAGO_MEDIO_PAGO] NOT NULL,
			DESCUENTO_FECHA_INICIO DATETIME,
			DESCUENTO_FECHA_FIN DATETIME,
			DESCUENTO_PORCENTAJE DECIMAL(18,2),
			DESCUENTO_TOPE DECIMAL(18,2),
			DESCUENTO_DESCRIPCION NVARCHAR(255)
		); 

		CREATE TABLE [QUICK_SORT].[SUPERMERCADO](
			SUPER_CUIT NVARCHAR(255) PRIMARY KEY,
			SUPER_DIRECCION_ID INTEGER REFERENCES [QUICK_SORT].[DIRECCION] NOT NULL,
			SUPER_NOMBRE NVARCHAR(255),
			SUPER_RAZON_SOC NVARCHAR(255),
			SUPER_IIBB NVARCHAR(255),
			SUPER_FECHA_INI_ACTIVIDAD DATETIME,
			SUPER_CONDICION_FISCAL NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[SUCURSAL](
			SUCURSAL_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			SUCURSAL_SUPER_CUIT NVARCHAR(255) REFERENCES [QUICK_SORT].[SUPERMERCADO] NOT NULL,
			SUCURSAL_DIRECCION_ID INTEGER REFERENCES [QUICK_SORT].[DIRECCION] NOT NULL,
			SUCURSAL_NOMBRE NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[EMPLEADO](
			EMPLEADO_LEGAJO INTEGER IDENTITY(1,1) PRIMARY KEY,
			EMPLEADO_SUCURSAL_ID INTEGER REFERENCES [QUICK_SORT].[SUCURSAL] NOT NULL,
			EMPLEADO_NOMBRE NVARCHAR(255),
			EMPLEADO_APELLIDO NVARCHAR(255),
			EMPLEADO_FECHA_REGISTRO DATETIME,
			EMPLEADO_TELEFONO DECIMAL(18,0),
			EMPLEADO_MAIL NVARCHAR(255),
			EMPLEADO_FECHA_NACIMIENTO DATE,
			EMPLEADO_DNI DECIMAL(18,0)
		);

		CREATE TABLE [QUICK_SORT].[TICKET_TIPO_COMPROBANTE](
			TICKET_TIPO_COMPROBANTE_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			TICKET_TIPO_COMPROBANTE NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[CAJA_TIPO](
			CAJA_TIPO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			CAJA_TIPO NVARCHAR(255)
		);
		CREATE TABLE [QUICK_SORT].[ESTADO](
			ESTADO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			ESTADO_TIPO NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[CAJA](
			CAJA_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			CAJA_SUCURSAL_ID INTEGER REFERENCES [QUICK_SORT].[SUCURSAL] NOT NULL,
			CAJA_TIPO_ID INTEGER REFERENCES [QUICK_SORT].[CAJA_TIPO] NOT NULL,
			CAJA_NUMERO DECIMAL(18,0)
		);

		CREATE TABLE [QUICK_SORT].[ESTADO_POR_ENVIO](
			ESTADO_ID INTEGER REFERENCES [QUICK_SORT].[ESTADO] NOT NULL,
			--ENVIO_ID INTEGER REFERENCES [QUICK_SORT].[ENVIO] NOT NULL,
			ESTADO_FECHA_INICIO DATETIME
			--PRIMARY KEY(ESTADO_ID, ENVIO_ID)
			PRIMARY KEY(ESTADO_ID)
		);

		CREATE TABLE [QUICK_SORT].[TICKET](
			TICKET_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			TICKET_SUCURSAL_ID INTEGER REFERENCES [QUICK_SORT].[SUCURSAL] NOT NULL,
			TICKET_EMPLEADO_LEGAJO INTEGER REFERENCES [QUICK_SORT].[EMPLEADO] NOT NULL,
			TICKET_CAJA_ID INTEGER REFERENCES [QUICK_SORT].[CAJA] NOT NULL,
			TICKET_TIPO_COMPROBANTE_ID INTEGER REFERENCES [QUICK_SORT].[TICKET_TIPO_COMPROBANTE] NOT NULL,
			TICKET_NRO DECIMAL(18,0),
			TICKET_TOTAL DECIMAL(18,2),
			TICKET_FECHA_HORA DATETIME,
			TICKET_SUBTOTAL_PRODUCTOS DECIMAL(18,2),
			TICKET_DESCUENTO_MEDIO DECIMAL(18,2),
			TICKET_TOTAL_PROMOCIONES DECIMAL(18,2),
			TICKET_TOTAL_ENVIO DECIMAL(18,2)
		);

		CREATE TABLE [QUICK_SORT].[DETALLE_TICKET](
			DETALLE_TICKET_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			DETALLE_TICKET_TICKET_ID INTEGER REFERENCES [QUICK_SORT].[TICKET] NOT NULL,
			--PRODUCTO_ID INTEGER REFERENCES [QUICK_SORT].[PRODUCTO] NOT NULL,
			DETALLE_CANTIDAD DECIMAL(18,0),
			DETALLE_PRECIO_UNITARIO DECIMAL(18,2),
			DETALLE_TOTAL_PRODUCTO DECIMAL(18,2)

		CREATE TABLE [QUICK_SORT].PRODUCTO_SUB_CATEGORIA(
			PRODUCTO_SUB_CATEGORIA_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			PRODUCTO_CATEGORIA_ID INTEGER REFERENCES[QUICK_SORT].[PRODUCTO_CATEGORIA],
			PRODUCTO_SUB_CATEGORIA NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].[PRODUCTO](
			PRODUCTO_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			PRODUCTO_SUB_CATEGORIA_ID INTEGER REFERENCES[QUICK_SORT].[PRODUCTO_SUB_CATEGORIA],
			PRODUCTO_NOMBRE NVARCHAR(255),
			PRODUCTO_DESCRIPCION NVARCHAR(255),
			PRODUCTO_PRECIO DECIMAL(18,2),
			PRODUCTO_MARCA NVARCHAR(255)
		);

		CREATE TABLE [QUICK_SORT].PROMOCION(
			PROMO_CODIGO DECIMAL(18,0)  PRIMARY KEY,
        	PROMO_DESCRIPCION NVARCHAR(255),
        	PROMO_FECHA_INICIO DATETIME,
        	PROMO_FECHA_FIN DATETIME

		);

		CREATE TABLE [QUICK_SORT].REGLA_PROMOCION_PRODUCTO(
			PROMO_CODIGO DECIMAL(18,0) REFERENCES [QUICK_SORT].[PROMOCION],
        	PRODUCTO_ID INTEGER REFERENCES [QUICK_SORT].[PRODUCTO],
        	PRIMARY KEY (PROMO_CODIGO, PRODUCTO_ID)
		);


		CREATE TABLE [QUICK_SORT].REGLA_PROMOCION(
			REGLA_PROMOCION_ID INTEGER IDENTITY(1,1) PRIMARY KEY,
			REGLA_PROMO_CODIGO DECIMAL(18,0) REFERENCES [QUICK_SORT].[PROMOCION],
			REGLA_DESCRIPCION NVARCHAR(255),
			REGLA_DESCUENTO_APLICABLE DECIMAL(18,2),
			REGLA_CANTIDAD_APLICABLE DECIMAL(18,0),
			REGLA_CANTIDAD_APLICABLE_DESCUENTO DECIMAL(18,0),
			REGLA_CANTIDAD_MAXIMA DECIMAL(18,0),
			REGLA_APLICA_MISMA_MARCA DECIMAL (18,0),
			REGLA_APLICA_MISMO_PRODUCTO DECIMAL (18,0)
		);

		CREATE TABLE [QUICK_SORT].DETALLE_POR_PROMOCION(
		--TODO  
			PROMO_CODIGO DECIMAL(18,0) REFERENCES [QUICK_SORT].[PROMOCION],
			DETALLE_TICKET_ID INTEGER IDENTITY(1,1),
			PROMO_TOTAL DECIMAL(18,2),
			PRIMARY KEY (DETALLE_TICKET_ID,PROMO_CODIGO)

		);

END
GO
-- Ejecutar procedimiento para crear tablas
EXEC [QUICK_SORT].[CREATE_TABLES]
GO

ALTER PROCEDURE [QUICK_SORT].[MIGRAR]
AS
BEGIN

<<<<<<< HEAD
	-- PROVINCIA

	INSERT INTO [QUICK_SORT].[PROVINCIA] (PROVINCIA)
		SELECT DISTINCT SUCURSAL_PROVINCIA
		FROM [gd_esquema].[Maestra]
		WHERE SUCURSAL_PROVINCIA IS NOT NULL
		UNION
		SELECT DISTINCT SUPER_PROVINCIA
		FROM [gd_esquema].[Maestra]
		WHERE SUPER_PROVINCIA IS NOT NULL	
		UNION
		SELECT DISTINCT CLIENTE_PROVINCIA
		FROM [gd_esquema].Maestra
		WHERE CLIENTE_PROVINCIA IS NOT NULL
	
	-- LOCALIDAD

	INSERT INTO [QUICK_SORT].[LOCALIDAD] (PROVINCIA_ID, LOCALIDAD)
		SELECT DISTINCT PROVINCIA_ID, SUPER_LOCALIDAD
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].PROVINCIA ON SUPER_PROVINCIA = PROVINCIA
		WHERE SUPER_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT PROVINCIA_ID, SUCURSAL_LOCALIDAD
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].PROVINCIA ON SUCURSAL_PROVINCIA = PROVINCIA
		WHERE SUPER_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT PROVINCIA_ID, CLIENTE_LOCALIDAD
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[PROVINCIA] ON CLIENTE_PROVINCIA = PROVINCIA
		WHERE CLIENTE_LOCALIDAD IS NOT NULL
	
	INSERT INTO [QUICK_SORT].[TICKET_TIPO_COMPROBANTE] (TICKET_TIPO_COMPROBANTE)
		SELECT DISTINCT TICKET_TIPO_COMPROBANTE
		FROM [gd_esquema].[Maestra]
	
	INSERT INTO [QUICK_SORT].[ESTADO] (ESTADO_TIPO)
		SELECT DISTINCT ENVIO_ESTADO
		FROM [gd_esquema].[Maestra]
		WHERE ENVIO_ESTADO IS NOT NULL

		-- DIRECCION

	INSERT INTO [QUICK_SORT].[DIRECCION] (LOCALIDAD_ID, DIRECCION)
		SELECT DISTINCT LOCALIDAD_ID, SUPER_DOMICILIO
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[LOCALIDAD] ON SUPER_LOCALIDAD = LOCALIDAD
		WHERE SUPER_DOMICILIO IS NOT NULL
		UNION
		SELECT DISTINCT LOCALIDAD_ID, SUCURSAL_DIRECCION
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[LOCALIDAD] ON SUCURSAL_LOCALIDAD = LOCALIDAD
		WHERE SUCURSAL_DIRECCION IS NOT NULL
		UNION
		SELECT DISTINCT LOCALIDAD_ID, CLIENTE_DOMICILIO
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[LOCALIDAD] ON CLIENTE_LOCALIDAD = LOCALIDAD
		WHERE CLIENTE_DOMICILIO IS NOT NULL

	-- SUPERMERCADO

	INSERT INTO [QUICK_SORT].[SUPERMERCADO] (SUPER_CUIT, SUPER_DIRECCION_ID, SUPER_NOMBRE,
	SUPER_RAZON_SOC, SUPER_IIBB, SUPER_FECHA_INI_ACTIVIDAD, SUPER_CONDICION_FISCAL)
		SELECT DISTINCT SUPER_CUIT, DIRECCION_ID, SUPER_NOMBRE, SUPER_RAZON_SOC, SUPER_IIBB, SUPER_FECHA_INI_ACTIVIDAD,
		SUPER_CONDICION_FISCAL
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[DIRECCION] ON SUPER_DOMICILIO = DIRECCION
		WHERE SUPER_CUIT IS NOT NULL 

	-- SUCURSAL
	
	INSERT INTO [QUICK_SORT].[SUCURSAL] (SUCURSAL_SUPER_CUIT, SUCURSAL_DIRECCION_ID, SUCURSAL_NOMBRE)
		SELECT DISTINCT s.SUPER_CUIT, d.DIRECCION_ID, m.SUCURSAL_NOMBRE
		FROM [gd_esquema].[Maestra] m
		JOIN [QUICK_SORT].[DIRECCION] d ON m.SUCURSAL_DIRECCION = d.DIRECCION
		JOIN [QUICK_SORT].[SUPERMERCADO] s ON s.SUPER_CUIT = m.SUPER_CUIT
		WHERE SUCURSAL_NOMBRE IS NOT NULL

	-- EMPLEADO (TODO: La FK de sucursal_id quedaria en null?)
	
	INSERT INTO [QUICK_SORT].[EMPLEADO] (EMPLEADO_SUCURSAL_ID, EMPLEADO_NOMBRE, EMPLEADO_APELLIDO, 
	EMPLEADO_FECHA_REGISTRO, EMPLEADO_TELEFONO, EMPLEADO_MAIL, EMPLEADO_FECHA_NACIMIENTO, EMPLEADO_DNI)
		SELECT DISTINCT s.SUCURSAL_ID, m.EMPLEADO_NOMBRE, m.EMPLEADO_APELLIDO, m.EMPLEADO_FECHA_REGISTRO, m.EMPLEADO_TELEFONO,
		m.EMPLEADO_MAIL, m.EMPLEADO_FECHA_NACIMIENTO, m.EMPLEADO_DNI
		FROM [gd_esquema].[Maestra] m
		JOIN [QUICK_SORT].[SUCURSAL] s ON s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE
		WHERE EMPLEADO_DNI IS NOT NULL

	-- DESCUENTO MEDIO PAGO (TODO:FK DESCUENTO PAGO MEDIO PAGO ID)

	INSERT INTO [QUICK_SORT].[DESCUENTO_MEDIO_PAGO](DESCUENTO_MEDIO_PAGO_CODIGO, DESCUENTO_FECHA_INICIO,
	DESCUENTO_FECHA_FIN, DESCUENTO_PORCENTAJE, DESCUENTO_TOPE, DESCUENTO_DESCRIPCION)
		SELECT DISTINCT m.DESCUENTO_CODIGO, m.DESCUENTO_FECHA_INICIO, m.DESCUENTO_FECHA_FIN, m.DESCUENTO_PORCENTAJE_DESC,
		m.DESCUENTO_TOPE, m.DESCUENTO_DESCRIPCION
		FROM [gd_esquema].[Maestra] m
		WHERE m.DESCUENTO_CODIGO IS NOT NULL

	INSERT INTO [QUICK_SORT].[CAJA_TIPO] (CAJA_TIPO)
		SELECT DISTINCT CAJA_TIPO
		FROM [gd_esquema].[Maestra]
		WHERE CAJA_TIPO IS NOT NULL		

	INSERT INTO [QUICK_SORT].[CAJA] (CAJA_SUCURSAL_ID, CAJA_TIPO_ID, CAJA_NUMERO)
		SELECT DISTINCT s.SUCURSAL_ID, c.CAJA_TIPO_ID, m.CAJA_NUMERO FROM [QUICK_SORT].[SUCURSAL] s 
		JOIN [gd_esquema].[Maestra] m on s.sucursal_nombre = m.SUCURSAL_NOMBRE
		JOIN [QUICK_SORT].[CAJA_TIPO] c on c.CAJA_TIPO = m.CAJA_TIPO

		--TODO: TICKET_TOTAL_PROMOCIONES
	INSERT INTO [QUICK_SORT].[TICKET](TICKET_NRO,TICKET_SUCURSAL_ID,TICKET_EMPLEADO_LEGAJO,TICKET_CAJA_ID,
			TICKET_TIPO_COMPROBANTE_ID,TICKET_TOTAL,TICKET_FECHA_HORA,TICKET_SUBTOTAL_PRODUCTOS,
			TICKET_DESCUENTO_MEDIO, TICKET_TOTAL_ENVIO)
		SELECT DISTINCT m.TICKET_NUMERO, s.SUCURSAL_ID, e.EMPLEADO_LEGAJO, c.CAJA_SUCURSAL_ID,
		(SELECT t.TICKET_TIPO_COMPROBANTE_ID FROM [QUICK_SORT].[TICKET_TIPO_COMPROBANTE] t WHERE t.TICKET_TIPO_COMPROBANTE = m.TICKET_TIPO_COMPROBANTE),
		m.TICKET_TOTAL_TICKET, m.TICKET_FECHA_HORA, m.TICKET_SUBTOTAL_PRODUCTOS, m.TICKET_TOTAL_DESCUENTO_APLICADO_MP, m.TICKET_TOTAL_ENVIO
		FROM gd_esquema.Maestra m 
		join [QUICK_SORT].[SUCURSAL] s on s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE 
		join [QUICK_SORT].[EMPLEADO] e on e.EMPLEADO_DNI = m.EMPLEADO_DNI
		join [QUICK_SORT].[CAJA] c on c.CAJA_SUCURSAL_ID = s.SUCURSAL_ID and c.CAJA_NUMERO = m.CAJA_NUMERO

	INSERT INTO [QUICK_SORT].[DETALLE_TICKET](DETALLE_TICKET_TICKET_ID, DETALLE_CANTIDAD,
				DETALLE_PRECIO_UNITARIO,DETALLE_TOTAL_PRODUCTO)
		SELECT DISTINCT t1.ticket_id, m.TICKET_DET_CANTIDAD, m.TICKET_DET_PRECIO, m.TICKET_DET_TOTAL
		from [gd_esquema].[Maestra] m
		join [QUICK_SORT].[TICKET] t1 on t1.TICKET_NRO = m.TICKET_NUMERO 
		join [QUICK_SORT].[EMPLEADO] e on t1.TICKET_EMPLEADO_LEGAJO = e.EMPLEADO_LEGAJO
		WHERE m.EMPLEADO_DNI = e.EMPLEADO_DNI

	-- LOCALIDAD

	INSERT INTO [QUICK_SORT].[LOCALIDAD] (PROVINCIA_ID, LOCALIDAD)
		SELECT DISTINCT PROVINCIA_ID, SUPER_LOCALIDAD
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].PROVINCIA ON SUPER_PROVINCIA = PROVINCIA
		WHERE SUPER_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT PROVINCIA_ID, SUCURSAL_LOCALIDAD
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].PROVINCIA ON SUCURSAL_PROVINCIA = PROVINCIA
		WHERE SUPER_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT PROVINCIA_ID, CLIENTE_LOCALIDAD
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[PROVINCIA] ON CLIENTE_PROVINCIA = PROVINCIA
		WHERE CLIENTE_LOCALIDAD IS NOT NULL

	-- DIRECCION

	INSERT INTO [QUICK_SORT].[DIRECCION] (LOCALIDAD_ID, DIRECCION)
		SELECT DISTINCT LOCALIDAD_ID, SUPER_DOMICILIO
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[LOCALIDAD] ON SUPER_LOCALIDAD = LOCALIDAD
		WHERE SUPER_DOMICILIO IS NOT NULL
		UNION
		SELECT DISTINCT LOCALIDAD_ID, SUCURSAL_DIRECCION
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[LOCALIDAD] ON SUCURSAL_LOCALIDAD = LOCALIDAD
		WHERE SUCURSAL_DIRECCION IS NOT NULL
		UNION
		SELECT DISTINCT LOCALIDAD_ID, CLIENTE_DOMICILIO
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[LOCALIDAD] ON CLIENTE_LOCALIDAD = LOCALIDAD
		WHERE CLIENTE_DOMICILIO IS NOT NULL

	-- SUPERMERCADO

	INSERT INTO [QUICK_SORT].[SUPERMERCADO] (SUPER_CUIT, SUPER_DIRECCION_ID, SUPER_NOMBRE,
	SUPER_RAZON_SOC, SUPER_IIBB, SUPER_FECHA_INI_ACTIVIDAD, SUPER_CONDICION_FISCAL)
		SELECT DISTINCT SUPER_CUIT, DIRECCION_ID, SUPER_NOMBRE, SUPER_RAZON_SOC, SUPER_IIBB, SUPER_FECHA_INI_ACTIVIDAD,
		SUPER_CONDICION_FISCAL
		FROM [gd_esquema].[Maestra]
		JOIN [QUICK_SORT].[DIRECCION] ON SUPER_DOMICILIO = DIRECCION
		WHERE SUPER_CUIT IS NOT NULL 

	-- SUCURSAL
	
	INSERT INTO [QUICK_SORT].[SUCURSAL] (SUCURSAL_SUPER_CUIT, SUCURSAL_DIRECCION_ID, SUCURSAL_NOMBRE)
		SELECT DISTINCT s.SUPER_CUIT, d.DIRECCION_ID, m.SUCURSAL_NOMBRE
		FROM [gd_esquema].[Maestra] m
		JOIN [QUICK_SORT].[DIRECCION] d ON m.SUCURSAL_DIRECCION = d.DIRECCION
		JOIN [QUICK_SORT].[SUPERMERCADO] s ON s.SUPER_CUIT = m.SUPER_CUIT
		WHERE SUCURSAL_NOMBRE IS NOT NULL

	-- EMPLEADO
	
	INSERT INTO [QUICK_SORT].[EMPLEADO] (EMPLEADO_SUCURSAL_ID, EMPLEADO_NOMBRE, EMPLEADO_APELLIDO, 
	EMPLEADO_FECHA_REGISTRO, EMPLEADO_TELEFONO, EMPLEADO_MAIL, EMPLEADO_FECHA_NACIMIENTO, EMPLEADO_DNI)
		SELECT DISTINCT s.SUCURSAL_ID, m.EMPLEADO_NOMBRE, m.EMPLEADO_APELLIDO, m.EMPLEADO_FECHA_REGISTRO, m.EMPLEADO_TELEFONO,
		m.EMPLEADO_MAIL, m.EMPLEADO_FECHA_NACIMIENTO, m.EMPLEADO_DNI
		FROM [gd_esquema].[Maestra] m
		JOIN [QUICK_SORT].[SUCURSAL] s ON s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE
		WHERE EMPLEADO_DNI IS NOT NULL

	-- DESCUENTO MEDIO PAGO (TODO:FK DESCUENTO PAGO MEDIO PAGO ID)

	INSERT INTO [QUICK_SORT].[DESCUENTO_MEDIO_PAGO](DESCUENTO_MEDIO_PAGO_CODIGO, DESCUENTO_FECHA_INICIO,
	DESCUENTO_FECHA_FIN, DESCUENTO_PORCENTAJE, DESCUENTO_TOPE, DESCUENTO_DESCRIPCION)
		SELECT DISTINCT m.DESCUENTO_CODIGO, m.DESCUENTO_FECHA_INICIO, m.DESCUENTO_FECHA_FIN, m.DESCUENTO_PORCENTAJE_DESC,
		m.DESCUENTO_TOPE, m.DESCUENTO_DESCRIPCION
		FROM [gd_esquema].[Maestra] m
		WHERE m.DESCUENTO_CODIGO IS NOT NULL

	-- CAJA_TIPO

	INSERT INTO [QUICK_SORT].[CAJA_TIPO] (CAJA_TIPO)
		SELECT DISTINCT CAJA_TIPO
		FROM [gd_esquema].[Maestra]
		WHERE CAJA_TIPO IS NOT NULL		

	-- CAJA

	INSERT INTO [QUICK_SORT].[CAJA] (CAJA_SUCURSAL_ID, CAJA_TIPO_ID, CAJA_NUMERO)
		SELECT DISTINCT s.SUCURSAL_ID, c.CAJA_TIPO_ID, m.CAJA_NUMERO FROM [QUICK_SORT].[SUCURSAL] s 
		JOIN [gd_esquema].[Maestra] m on s.sucursal_nombre = m.SUCURSAL_NOMBRE
		JOIN [QUICK_SORT].[CAJA_TIPO] c on c.CAJA_TIPO = m.CAJA_TIPO

	-- TICKET-> TODO: TICKET_TOTAL_PROMOCIONES

	INSERT INTO [QUICK_SORT].[TICKET](TICKET_NRO,TICKET_SUCURSAL_ID,TICKET_EMPLEADO_LEGAJO,TICKET_CAJA_ID,
			TICKET_TIPO_COMPROBANTE_ID,TICKET_TOTAL,TICKET_FECHA_HORA,TICKET_SUBTOTAL_PRODUCTOS,
			TICKET_DESCUENTO_MEDIO, TICKET_TOTAL_ENVIO)
		SELECT DISTINCT m.TICKET_NUMERO, s.SUCURSAL_ID, e.EMPLEADO_LEGAJO, c.CAJA_SUCURSAL_ID,
		(SELECT t.TICKET_TIPO_COMPROBANTE_ID FROM [QUICK_SORT].[TICKET_TIPO_COMPROBANTE] t WHERE t.TICKET_TIPO_COMPROBANTE = m.TICKET_TIPO_COMPROBANTE),
		m.TICKET_TOTAL_TICKET, m.TICKET_FECHA_HORA, m.TICKET_SUBTOTAL_PRODUCTOS, m.TICKET_TOTAL_DESCUENTO_APLICADO_MP, m.TICKET_TOTAL_ENVIO
		FROM gd_esquema.Maestra m 
		join [QUICK_SORT].[SUCURSAL] s on s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE 
		join [QUICK_SORT].[EMPLEADO] e on e.EMPLEADO_DNI = m.EMPLEADO_DNI
		join [QUICK_SORT].[CAJA] c on c.CAJA_SUCURSAL_ID = s.SUCURSAL_ID and c.CAJA_NUMERO = m.CAJA_NUMERO

	-- DETALLE TICKET

	INSERT INTO [QUICK_SORT].[DETALLE_TICKET](DETALLE_TICKET_TICKET_ID, DETALLE_CANTIDAD,
				DETALLE_PRECIO_UNITARIO,DETALLE_TOTAL_PRODUCTO)
		SELECT DISTINCT t1.ticket_id, m.TICKET_DET_CANTIDAD, m.TICKET_DET_PRECIO, m.TICKET_DET_TOTAL
		from [gd_esquema].[Maestra] m
		join [QUICK_SORT].[TICKET] t1 on t1.TICKET_NRO = m.TICKET_NUMERO AND t1.TICKET_FECHA_HORA = m.TICKET_FECHA_HORA
		join [QUICK_SORT].[EMPLEADO] e on t1.TICKET_EMPLEADO_LEGAJO = e.EMPLEADO_LEGAJO
		WHERE m.EMPLEADO_DNI = e.EMPLEADO_DNI

	INSERT INTO [QUICK_SORT].[PRODUCTO_CATEGORIA] (PRODUCTO_CATEGORIA)
		SELECT DISTINCT PRODUCTO_CATEGORIA
		FROM [gd_esquema].[Maestra]
		WHERE PRODUCTO_CATEGORIA IS NOT NULL

	INSERT INTO [QUICK_SORT].[PRODUCTO_SUB_CATEGORIA] (PRODUCTO_CATEGORIA_ID,PRODUCTO_SUB_CATEGORIA)
		SELECT DISTINCT p.PRODUCTO_CATEGORIA_ID,m.PRODUCTO_SUB_CATEGORIA
		FROM [gd_esquema].[Maestra] m JOIN [QUICK_SORT].[PRODUCTO_CATEGORIA] p ON  p.PRODUCTO_CATEGORIA = m.PRODUCTO_CATEGORIA
		WHERE PRODUCTO_SUB_CATEGORIA IS NOT NULL

	INSERT INTO [QUICK_SORT].[PRODUCTO]( PRODUCTO_SUB_CATEGORIA_ID, PRODUCTO_NOMBRE, PRODUCTO_DESCRIPCION, PRODUCTO_PRECIO, PRODUCTO_MARCA)
		SELECT DISTINCT p.PRODUCTO_SUB_CATEGORIA_ID,PRODUCTO_NOMBRE, PRODUCTO_DESCRIPCION, PRODUCTO_PRECIO, PRODUCTO_MARCA 
		FROM [gd_esquema].[Maestra] m JOIN [QUICK_SORT].[PRODUCTO_SUB_CATEGORIA] p ON p.PRODUCTO_SUB_CATEGORIA = m.PRODUCTO_SUB_CATEGORIA
		WHERE PRODUCTO_NOMBRE IS NOT NULL
		AND PRODUCTO_DESCRIPCION IS NOT NULL
		AND PRODUCTO_PRECIO IS NOT NULL
		AND PRODUCTO_MARCA IS NOT NULL


	INSERT INTO [QUICK_SORT].[PROMOCION] (PROMO_CODIGO,PROMO_DESCRIPCION, PROMO_FECHA_INICIO, PROMO_FECHA_FIN)
		SELECT DISTINCT PROMO_CODIGO,PROMOCION_DESCRIPCION,PROMOCION_FECHA_FIN,
		PROMOCION_FECHA_INICIO
		FROM [gd_esquema].[Maestra]
		WHERE PROMO_CODIGO IS NOT NULL

	INSERT INTO [QUICK_SORT].[REGLA_PROMOCION_PRODUCTO] (PROMO_CODIGO,PRODUCTO_ID)
		SELECT DISTINCT p.PROMO_CODIGO, pr.PRODUCTO_ID
		FROM [gd_esquema].[Maestra] m
		JOIN [QUICK_SORT].[PROMOCION] p ON p.PROMO_CODIGO = m.PROMO_CODIGO
		JOIN [QUICK_SORT].[PRODUCTO] pr ON pr.PRODUCTO_NOMBRE = m.PRODUCTO_NOMBRE AND pr.PRODUCTO_DESCRIPCION = m.PRODUCTO_DESCRIPCION AND pr.PRODUCTO_PRECIO = m.PRODUCTO_PRECIO AND pr.PRODUCTO_MARCA = m.PRODUCTO_MARCA
		WHERE m.PROMO_CODIGO IS NOT NULL 

	INSERT INTO [QUICK_SORT].[REGLA_PROMOCION] (REGLA_PROMO_CODIGO,REGLA_DESCRIPCION,REGLA_DESCUENTO_APLICABLE,REGLA_CANTIDAD_APLICABLE,REGLA_CANTIDAD_APLICABLE_DESCUENTO,REGLA_CANTIDAD_MAXIMA,REGLA_APLICA_MISMA_MARCA,REGLA_APLICA_MISMO_PRODUCTO)
		SELECT DISTINCT p.PROMO_CODIGO,m.REGLA_DESCRIPCION,m.REGLA_DESCUENTO_APLICABLE_PROD,m.REGLA_CANT_APLICABLE_REGLA,m.REGLA_CANT_APLICA_DESCUENTO,m.REGLA_CANT_MAX_PROD,m.REGLA_APLICA_MISMA_MARCA,m.REGLA_APLICA_MISMO_PROD
		FROM [gd_esquema].[Maestra] m JOIN [QUICK_SORT].[PROMOCION] p ON p.PROMO_CODIGO = m.PROMO_CODIGO
		WHERE m.PROMO_CODIGO IS NOT NULL
		AND REGLA_DESCRIPCION IS NOT NULL
		AND REGLA_DESCUENTO_APLICABLE_PROD IS NOT NULL
		AND REGLA_CANT_APLICABLE_REGLA IS NOT NULL
		AND REGLA_CANT_APLICA_DESCUENTO IS NOT NULL
		AND REGLA_CANT_MAX_PROD IS NOT NULL
		AND REGLA_APLICA_MISMA_MARCA IS NOT NULL
		AND REGLA_APLICA_MISMO_PROD IS NOT NULL

	--TODO	
	INSERT INTO [QUICK_SORT].[DETALLE_POR_PROMOCION] (DETALLE_TICKET_ID,PROMO_CODIGO,PROMO_TOTAL)
		SELECT DISTINCT d.DETALLE_TICKET_ID,p.PROMO_CODIGO,m.PROMO_APLICADA_DESCUENTO
		FROM [gd_esquema].[Maestra] m
		 JOIN [QUICK_SORT].[PROMOCION] p ON p.PROMO_CODIGO = m.PROMO_CODIGO
		 JOIN [QUICK_SORT].[PRODUCTO] pr ON pr.PRODUCTO_NOMBRE = m.PRODUCTO_NOMBRE AND pr.PRODUCTO_DESCRIPCION = m.PRODUCTO_DESCRIPCION AND pr.PRODUCTO_PRECIO = m.PRODUCTO_PRECIO AND pr.PRODUCTO_MARCA = m.PRODUCTO_MARCA
		JOIN [QUICK_SORT].[TICKET] t ON t.TICKET_NRO = m.TICKET_NUMERO and t.TICKET_FECHA_HORA = m.TICKET_FECHA_HORA and t.TICKET_SUBTOTAL_PRODUCTOS = m.TICKET_SUBTOTAL_PRODUCTOS
		JOIN [QUICK_SORT].[DETALLE_TICKET] d ON d.DETALLE_TICKET_TICKET_ID = t.TICKET_ID and d.PRODUCTO_ID = pr.PRODUCTO_ID
	
	--LINKEAR POR PRODUCTO Y TICKET
	  
	INSERT INTO [QUICK_SORT].[REGLA_PROMOCION_PRODUCTO] (PROMO_CODIGO,PRODUCTO_ID)
		SELECT DISTINCT p.PROMO_CODIGO, pr.PRODUCTO_ID
		FROM [gd_esquema].[Maestra] m
		JOIN [QUICK_SORT].[PROMOCION] p ON p.PROMO_CODIGO = m.PROMO_CODIGO
		JOIN [QUICK_SORT].[PRODUCTO] pr ON pr.PRODUCTO_NOMBRE = m.PRODUCTO_NOMBRE AND pr.PRODUCTO_DESCRIPCION = m.PRODUCTO_DESCRIPCION AND pr.PRODUCTO_PRECIO = m.PRODUCTO_PRECIO AND pr.PRODUCTO_MARCA = m.PRODUCTO_MARCA
		WHERE m.PROMO_CODIGO IS NOT NULL 

END
GO

EXEC [QUICK_SORT].[MIGRAR]

GO

-- SELECT * FROM gd_esquema.Maestra

--SELECT TICKET_NUMERO, CAJA_NUMERO, CAJA_TIPO ,EMPLEADO_NOMBRE, PRODUCTO_NOMBRE FROM gd_esquema.Maestra.--
--ORDER BY TICKET_NUMERO

--SELECT * FROM gd_esquema.Maestra WHERE TICKET_NUMERO = 1351465859
